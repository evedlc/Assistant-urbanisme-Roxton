import streamlit as st
import fitz  # PyMuPDF
import openai

# Interface utilisateur
st.set_page_config(page_title="Assistant d'urbanisme", layout="wide")
st.title("Assistant d'urbanisme ‚Äì V√©rification de conformit√© r√©glementaire")

# Saisie de la cl√© API
api_key = st.text_input("üîë Entrez votre cl√© API OpenAI", type="password")

# Saisie de la description du projet
project_description = st.text_area("üìù Description du projet d‚Äôurbanisme", height=200)

# T√©l√©versement des fichiers PDF
uploaded_files = st.file_uploader("üìÑ T√©l√©versez les fichiers PDF des r√®glements municipaux", type=["pdf"], accept_multiple_files=True)

# Bouton d'analyse
if st.button("Analyser la conformit√© du projet") and api_key and project_description and uploaded_files:
    # Lecture du contenu des fichiers PDF
    full_context = ""
    for file in uploaded_files:
        doc = fitz.open(stream=file.read(), filetype="pdf")
        text = ""
        for page in doc:
            text += page.get_text()
        full_context += f"\n\n--- Document : {file.name} ---\n{text}"

    # Construction du prompt
    prompt = f"""
Tu es un expert en urbanisme municipal au Qu√©bec. Voici un projet d‚Äôurbanisme √† analyser :

=== Description du projet ===
{project_description}

=== Documents de r√©f√©rence ===
{full_context}

=== Question ===
Le projet est-il conforme √† l‚Äôensemble des r√®glements municipaux ci-dessus ? Si non, indique pr√©cis√©ment les √©l√©ments non conformes, les articles concern√©s, et propose des pistes de r√©gularisation (ex. : d√©rogation mineure, PPCMOI, modification du projet).
"""

    # Appel √† l'API OpenAI
    openai.api_key = api_key
    try:
        response = openai.ChatCompletion.create(
            model="gpt-4",
            messages=[
                {"role": "system", "content": "Tu es un assistant d‚Äôurbanisme qui analyse la conformit√© r√©glementaire."},
                {"role": "user", "content": prompt}
            ]
        )
        answer = response.choices[0].message.content
        st.success("‚úÖ Analyse termin√©e")
        st.markdown("### R√©sultat de l‚Äôanalyse :")
        st.write(answer)
    except Exception as e:
        st.error(f"Erreur lors de l‚Äôappel √† l‚ÄôAPI : {e}")
else:
    st.info("Veuillez entrer votre cl√© API, une description de projet et t√©l√©verser au moins un fichier PDF.")
